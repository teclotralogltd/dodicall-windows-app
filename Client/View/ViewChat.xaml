<!--
//  Copyright (C) 2016, Telco Cloud Trading & Logistic Ltd
//
//  This file is part of dodicall.
//  dodicall is free software : you can redistribute it and / or modify
//  it under the terms of the GNU General Public License as published by
//  the Free Software Foundation, either version 3 of the License, or
//  (at your option) any later version.
//
//  dodicall is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the
//  GNU General Public License for more details.
//
//  You should have received a copy of the GNU General Public License
//  along with dodicall.If not, see<http://www.gnu.org/licenses/> .
-->

<UserControl x:Class="dodicall.View.ViewChat"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:dodicall.View"
             xmlns:converter="clr-namespace:dodicall.Converter"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300" Name="ViewChatUserControl">
    <Grid>
        <ListBox Name="ListBoxChat" SelectedItem="{Binding CurrentModelChat}" ItemsSource="{Binding CurrentListModelChat}" SizeChanged="ListBoxChat_SizeChanged" BorderThickness="0">
            <ListBox.ItemTemplate>
                <DataTemplate> 
                    <Grid Height="50" HorizontalAlignment="Left" Width="{Binding ElementName=ViewChatUserControl, Path=WidthChatItem}" MouseLeftButtonUp="Grid_MouseLeftButtonUp">
                        <Grid.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="{DynamicResource ViewChat_Call}" IsEnabled="{Binding IsP2P}" Click="ContextMenuCall_OnClick"/>
                                <MenuItem Header="{DynamicResource ViewChat_Rename}" Click="ContextMenuRename_OnClick"/>
                                <MenuItem Header="{DynamicResource ViewChat_ChatMembers}" Click="ContextMenuChatMembers_OnClick"/>
                                <MenuItem Header="{DynamicResource ViewChat_Delete}" Click="ContextMenuDelete_OnClick"/> 
                                <Separator/>
                                <MenuItem Header="{DynamicResource ViewChat_MarkReadAll}" Click="ContextMenuMarkReadAll_OnClick"/> 
                            </ContextMenu>
                        </Grid.ContextMenu>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="50"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.ColumnSpan="2"/> <!-- Нужен для покрытия большей площади клика GridContactItem_OnMouseLeftButtonDown -->
                        <Grid Grid.Column="0" Margin="0,0,10,0" Height="36" Width="36">
                            <Image Source="{Binding Avatar}"/>
                            <Image HorizontalAlignment="Right" VerticalAlignment="Bottom" Height="15" Width="15" Source="/dodicall;component/Resources/IconTray_small.png"/>
                        </Grid>
                        <Grid Grid.Column="1">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            
                            <Grid Grid.Row="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" Name="ColumnDefinitionStatus" />
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Ellipse Grid.Column="0" Margin="0,5,5,5" Height="6" Width="6" Fill="{Binding ModelContactChat.ModelEnumUserBaseStatusObj.Color}"/>
                                <TextBlock Grid.Column="1"  FontSize="14" TextTrimming="CharacterEllipsis" Text="{Binding CheckedTitle}" VerticalAlignment="Center"/>
                                <Image Name="ImageEncryptedChat" Grid.Column="2" Margin="0,0,2,-2" HorizontalAlignment="Right"  Height="15" Width="15" Source="/dodicall;component/Resources/encrypted.png"/>
                                <TextBlock Grid.Column="3" FontSize="11" Foreground="Gray" Text="{Binding LastModifiedDateString}" VerticalAlignment="Center"/>
                            </Grid>
                            
                            <Grid Grid.Row="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock FontSize="12" Name="TextBlockLastMessage" TextTrimming="CharacterEllipsis" Text="{Binding LastMessage.StringContentLine}"/>
                                <Grid Name="GridDraftMessage" Visibility="Collapsed">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" FontSize="12" Foreground="Red" Margin="0,0,3,0" TextTrimming="CharacterEllipsis" Text="{DynamicResource ViewChat_Draft}"/>
                                    <TextBlock Grid.Column="1" FontSize="12" Name="TextBlockDraftMessage" TextTrimming="CharacterEllipsis"/>
                                </Grid>
                                
                                <Grid Grid.Column="1" Visibility="{Binding Path=ExistNewMessages, Converter={converter:ConverterBoolToVisibilityCollapsed}}">
                                    <Rectangle Name="RectangleGridCountInvateUnread" Fill="Red" Height="16" Width="16" RadiusX="8" RadiusY="8"/>
                                    <Label Margin="0,0,0,1" Foreground="White" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" FontSize="10" Content="{Binding CountMessagesUnreadString}"/>
                                </Grid>
                            </Grid>
                        </Grid>
                    </Grid>
                    
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsP2P}" Value="false">
                            <Setter TargetName="ColumnDefinitionStatus" Property="Width" Value="0"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsP2P}" Value="true">
                            <Setter TargetName="ColumnDefinitionStatus" Property="Width" Value="Auto"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Secured}" Value="true">
                            <Setter TargetName="ImageEncryptedChat" Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Secured}" Value="false">
                            <Setter TargetName="ImageEncryptedChat" Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding HaveDraft}" Value="true">
                            <Setter TargetName="TextBlockLastMessage" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="GridDraftMessage" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="TextBlockDraftMessage" Property="Text" Value="{Binding DraftMessage.StringContentLine}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding HaveDraft}" Value="false">
                            <Setter TargetName="TextBlockLastMessage" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="GridDraftMessage" Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding LastMessage.IsQuotationWithoutText}" Value="true">
                            <Setter TargetName="TextBlockLastMessage" Property="FontStyle" Value="Italic"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding LastMessage.Readed}" Value="true">
                            <Setter TargetName="TextBlockLastMessage" Property="Foreground" Value="Gray"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding LastMessage.Readed}" Value="false">
                            <Setter TargetName="TextBlockLastMessage" Property="Foreground" Value="Black"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding NewMessagesOver}" Value="true">
                            <Setter TargetName="RectangleGridCountInvateUnread" Property="Width" Value="25"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding NewMessagesOver}" Value="false">
                            <Setter TargetName="RectangleGridCountInvateUnread" Property="Width" Value="16"/>
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>

    </Grid>
</UserControl>
